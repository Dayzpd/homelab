---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: qbittorrent-config
spec:
  storageClassName: nfs-nvme-retain
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qbittorrent
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: qbittorrent
  template:
    metadata:
      labels:
        app: qbittorrent
    spec:
      containers:
        - name: gluetun
          image: qmcgaw/gluetun
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: "2"
              memory: 512Mi
          envFrom:
          - secretRef:
              name: vpn-credentials
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          ports:
            - containerPort: 8888
              name: gluetun-health
          volumeMounts:
            - name: dev-net-tun
              mountPath: /dev/net/tun
              readOnly: true
        - name: qbittorrent
          image: lscr.io/linuxserver/qbittorrent # https://docs.linuxserver.io/images/docker-qbittorrent
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: WEBUI_PORT
              value: "8080"
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: config
              mountPath: /config
            - name: downloads
              mountPath: /downloads
      volumes:
        - name: dev-net-tun
          hostPath:
            path: /dev/net/tun
            type: CharDevice
        - name: config
          persistentVolumeClaim:
            claimName: qbittorrent-config
        - name: downloads
          persistentVolumeClaim:
            claimName: downloads

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: qbittorrent
  name: qbittorrent
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
  selector:
    app: qbittorrent
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  creationTimestamp: null
  name: qbittorrent
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt"
    #nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    #nginx.ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - qbittorrent.local.zachary.day
    secretName: qbittorrent-ingress-tls
  rules:
  - host: qbittorrent.local.zachary.day
    http:
      paths:
      - backend:
          service:
            name: qbittorrent
            port:
              name: http
        path: /
        pathType: Prefix
status:
  loadBalancer: {}