---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: prowlarr-config
spec:
  storageClassName: nfs-nvme-retain
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: prowlarr
  name: prowlarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prowlarr
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prowlarr
    spec:
      containers:
      - image: lscr.io/linuxserver/prowlarr
        name: prowlarr
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        env:
          - name: PUID
            value: "1000"
          - name: PGID
            value: "1000"
        ports:
          - containerPort: 9696
            name: http
        volumeMounts:
        - name: config
          mountPath: /config
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: prowlarr-config
status: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: prowlarr
  name: prowlarr
spec:
  ports:
  - name: http
    port: 9696
    protocol: TCP
    targetPort: http
  selector:
    app: prowlarr
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  creationTimestamp: null
  name: prowlarr
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt"
    #nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    #nginx.ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - prowlarr.local.zachary.day
    secretName: prowlarr-ingress-tls
  rules:
  - host: prowlarr.local.zachary.day
    http:
      paths:
      - backend:
          service:
            name: prowlarr
            port:
              name: http
        path: /
        pathType: Prefix
status:
  loadBalancer: {}